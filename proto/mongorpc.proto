// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package mongorpc;

option go_package = "github.com/mongorpc/mongorpc/proto";

enum Null {
  NULL_VALUE = 0;
}

message Array {
  repeated Value values = 1;
}

message Map {
  map<string, Value> fields = 1;
}

message Timestamp {
  int64 seconds = 1;
  int32 nanos = 2;
}

message Value {
  oneof type {
    double double_value = 1;
    string string_value = 2;
    Map map_value = 3;
    Array array_value = 4;
    bytes bytes_value = 5;
    //undefined = 6;
    // ObjectId object_id_value = 7;
    bool bool_value = 8;
    Timestamp date_value = 9;
    Null null_value = 10;
    //regex regex_value = 11;
    //dbPointer db_pointer_value = 12;
    //code code_value = 13;
    //symbol symbol_value = 14;
    //codewscope code_w_scope_value = 15;
    // int32 int32_value = 16;
    // int64 int64_value = 17;
    //timestamp timestamp_value = 18;
    //int32 timestamp_value = 19;
    //int64 timestamp_value = 20;
    //minKey min_key_value = 21;
    //maxKey max_key_value = 22;
    int64 integer_value = 23;
  }
}

message ListCollectionsRequest {
  string database = 1;
}

message ListCollectionsResponse {
  Array collections = 1;
}

message GetDocumentRequest {
  string database = 1;
  string collection = 2;
  string document_id = 3;
}

message GetDocumentResponse {
  Value document = 1;
}

message ListDocumentsRequest {
  string database = 1;
  string collection = 2;
  int32 limit = 3;
  int32 skip = 4;
}

message ListDocumentsResponse {
  Array documents = 1;
}

message CreateDocumentRequest {
  string database = 1;
  string collection = 2;
  Value document = 3;
}

message CreateDocumentResponse {
  string document_id = 1;
}

message UpdateDocumentRequest {
  string database = 1;
  string collection = 2;
  string document_id = 3;
  Value document = 4;
}

message UpdateDocumentResponse {
  string document_id = 1;
}

message DeleteDocumentRequest {
  string database = 1;
  string collection = 2;
  string document_id = 3;
}

message DeleteDocumentResponse {
  int64 DeletedCount = 1;
}

service MongoRPC {
  rpc ListCollections(ListCollectionsRequest) returns (ListCollectionsResponse);
  rpc GetDocument(GetDocumentRequest) returns (GetDocumentResponse);
  rpc ListDocuments(ListDocumentsRequest) returns (ListDocumentsResponse);
  rpc CreateDocument(CreateDocumentRequest) returns (CreateDocumentResponse);
  rpc UpdateDocument(UpdateDocumentRequest) returns (UpdateDocumentResponse);
  rpc DeleteDocument(DeleteDocumentRequest) returns (DeleteDocumentResponse);
}
